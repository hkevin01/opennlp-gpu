plugins {
    id 'java'
    // Existing plugins will be merged
// The rest of your build.gradle file...

// Define a custom task to build CUDA native code with CMake
task buildCudaNative(type: Exec) {
    description = 'Build CUDA native library using CMake'
    group = 'Build'
    
    // Create build directory if it doesn't exist
    doFirst {
        mkdir("${buildDir}/cmake")
    }
    
    // Configure CMake
    workingDir "${buildDir}/cmake"
    commandLine 'cmake', "${projectDir}/src/main/cpp", 
                '-DCMAKE_BUILD_TYPE=Release',
                "-DCMAKE_INSTALL_PREFIX=${buildDir}/natives"
    
    // Build and install
    doLast {
        exec {
            workingDir "${buildDir}/cmake"
            commandLine 'cmake', '--build', '.', '--target', 'install'
        }
    }
}

// Make Java compilation depend on native library
compileJava.dependsOn buildCudaNative

// Add native library directory to Java library path
tasks.withType(Test) {
    systemProperty 'java.library.path', "${buildDir}/natives/lib"
}

// Task to copy native libraries to the JAR
task copyNativesToJar(type: Copy) {
    from "${buildDir}/natives/lib"
    into "${buildDir}/resources/main/natives"
    include '*.so', '*.dll', '*.dylib', '*.jnilib'
}

// Make processResources depend on copying natives
processResources.dependsOn copyNativesToJar

}
