<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.github.hkevin01</groupId>
  <artifactId>opennlp-gpu</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <name>OpenNLP GPU Extension</name>
  <description>Third-party GPU acceleration extension for Apache OpenNLP - 10-15x faster NLP processing with CUDA, ROCm, and OpenCL support</description>
  <url>https://github.com/hkevin01/opennlp-gpu</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>OpenNLP GPU Extension Team</name>
      <email>contributors@opennlp-gpu.dev</email>
      <organization>OpenNLP GPU Extension Project</organization>
      <organizationUrl>https://github.com/hkevin01/opennlp-gpu</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/hkevin01/opennlp-gpu.git</connection>
    <developerConnection>scm:git:ssh://github.com/hkevin01/opennlp-gpu.git</developerConnection>
    <url>https://github.com/hkevin01/opennlp-gpu/tree/main</url>
  </scm>

  <properties>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <opennlp.version>2.5.5</opennlp.version>
    <junit.version>5.13.1</junit.version>
    <slf4j.version>2.0.17</slf4j.version>
    <jocl.version>2.0.5</jocl.version>

    <!-- Native library properties -->
    <native.library.name>opennlp_gpu</native.library.name>
    <native.library.version>${project.version}</native.library.version>
  </properties>

  <dependencies>
    <!-- OpenNLP dependencies - Updated to latest versions -->
    <dependency>
      <groupId>org.apache.opennlp</groupId>
      <artifactId>opennlp-tools</artifactId>
      <version>${opennlp.version}</version>
    </dependency>

    <!-- SLF4J API - Updated to latest stable -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- SLF4J Simple implementation for testing - Updated -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JOCL for OpenCL integration - Updated -->
    <dependency>
      <groupId>org.jocl</groupId>
      <artifactId>jocl</artifactId>
      <version>${jocl.version}</version>
    </dependency>

    <!-- JUnit for testing - Updated to JUnit 5 -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 4 support for legacy tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Maven Compiler Plugin - Updated to latest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <source>11</source>
          <target>11</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- Native library building with CMake -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <execution>
            <id>build-native-library</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>cmake</executable>
              <workingDirectory>${project.basedir}/src/main/cpp</workingDirectory>
              <arguments>
                <argument>-B</argument>
                <argument>${project.build.directory}/native</argument>
                <argument>-DCMAKE_BUILD_TYPE=Release</argument>
                <argument>-DJAVA_HOME=${java.home}</argument>
                <argument>.</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>compile-native-library</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>cmake</executable>
              <workingDirectory>${project.build.directory}/native</workingDirectory>
              <arguments>
                <argument>--build</argument>
                <argument>.</argument>
                <argument>--config</argument>
                <argument>Release</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy native libraries to resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-native-libraries</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/native</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/native</directory>
                  <includes>
                    <include>**/*.dll</include>
                    <include>**/*.so</include>
                    <include>**/*.dylib</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Maven Surefire Plugin for running tests - Updated to latest -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <includes>
            <include>**/GpuTestSuite.java</include>
            <include>**/MatrixOpsTest.java</include>
            <include>**/OpenNLPTestDataIntegration.java</include>
            <include>**/ConcurrencyTest.java</include>
            <include>**/PerformanceBenchmark.java</include>
          </includes>
          <excludes>
            <exclude>**/*Abstract*.java</exclude>
          </excludes>
          <failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
        </configuration>
      </plugin>

      <!-- Generate sources JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Generate Javadoc JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>11</source>
          <doclint>none</doclint>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>

      <!-- Assembly plugin for distribution -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
        </configuration>
      </plugin>
    </plugins>

    <!-- Include native libraries in JAR -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/native</directory>
        <targetPath>native</targetPath>
        <includes>
          <include>**/*.dll</include>
          <include>**/*.so</include>
          <include>**/*.dylib</include>
        </includes>
      </resource>
    </resources>
  </build>

  <!-- Distribution Management for Maven Central -->
  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <repositories>
    <repository>
      <id>central</id>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
  </repositories>

  <profiles>
    <!-- Release profile for signing JARs -->
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.7</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Platform-specific profiles -->
    <profile>
      <id>windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <native.library.extension>dll</native.library.extension>
      </properties>
    </profile>

    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>unix</family>
          <name>linux</name>
        </os>
      </activation>
      <properties>
        <native.library.extension>so</native.library.extension>
      </properties>
    </profile>

    <profile>
      <id>macos</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <native.library.extension>dylib</native.library.extension>
      </properties>
    </profile>
  </profiles>
</project>
